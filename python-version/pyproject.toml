[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nodeguardian"
version = "1.0.0"
description = "Event-driven Kubernetes node self-healing tool based on shell-operator"
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
authors = [
    {name = "NodeGuardian Team", email = "team@nodeguardian.io"},
]
keywords = ["kubernetes", "monitoring", "self-healing", "shell-operator"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "kubernetes>=28.1.0",
    "prometheus-client>=0.19.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.2",
    "structlog>=23.2.0",
    "tenacity>=8.2.3",
    "pydantic>=2.5.0",
    "click>=8.1.7",
    "aiohttp>=3.9.0",
    "asyncio-mqtt>=0.16.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/nodeguardian/nodeguardian"
Documentation = "https://nodeguardian.readthedocs.io"
Repository = "https://github.com/nodeguardian/nodeguardian.git"
Issues = "https://github.com/nodeguardian/nodeguardian/issues"

[project.scripts]
nodeguardian = "nodeguardian.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/nodeguardian"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/hooks",
    "/deploy",
    "/examples",
    "/tests",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nodeguardian"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "kubernetes.*",
    "prometheus_client.*",
    "structlog.*",
    "tenacity.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/nodeguardian"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
